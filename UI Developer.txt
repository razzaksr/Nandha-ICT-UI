Web development:
	UI/ Front end
	API/ Back end
	Data/ Data base
Http(80)/ Https(443): protocol
Server>> Live server using vs code


Required tool:
VS Code
Required Extension:
Live server
Intellisense for CSS


UI Developer:
	HTML
	CSS
	Bootstrap
	JS
Use case 1
	React JS
Use case 2
	Angular
Use case 3

HTML: Hyper Text Markup Language
Elements
attributes
eg:
	<element attributes="value">
	.........
	</element>


syntax:
<html>
	<head>
		... external file inclusion
		... meta data
	<title>Document/ Page title </title>
	</head>
	<body>
		.. contents to be appeared in the page
	</body>
</html>

. html	>> web page
	components/ elements:
		1. Text Element:
			p, h1, h2, h6, br format b,i,u
		2. List element
			ol, ul, li
		3. Media element
			video, audio, img
		4. group element
			header, footer, div, section
		5. form element:
			input>> text,passwordcheck,radio,button,hidden; select, button>> submit, reset
		6. navigation element
			a

Web site/ Web application:
	Static Web app
		eg: Single Page Application/ company public site, product site, wikipedia
	dynamic web app
		design common but not the contents
		eg:
			e-commerce, weather, gmail, irctc, swiggy,....
		
		
	
Application:
	Data:
	Operations:
		Create Read Update Delete


Task:
Name
role
icons: linkedin git project1(div id) project2(div id)

Executive Summary
....
...
..

Project Title
description...
...

Tech Stack
1.
2.
3.

Tools:




https://github.com/razzaksr/Nandha-ICT-UI


CSS:
Cascading Style sheet:
colors, size, borders, margins, alignments, hover, responsive

where i can write CSS for HTML:
1. css as attribute
	<element style="">

Selector based styling:
	element, id, class
2. css inside document's head section
	<head>
		<style>
			.....
		</style>
	</head>
3. css as exclusive file(.css) and embedded in HTML
	<head>
		<link rel="stylesheet" href="location of css"/>
	</head>




https://baleno.netlify.app

Task:
1. Personal Portfolio
2. Swiggy Clone
3. Namma Yatri Clone
4. E-Commerce


UI/ UX:

Introduction:

UI>> Interface/ design
UX> Experience/ flow

Research>> must not rely on assumption
pain points:
	standardized rent
	distance
	food
	sanitary
	accessible
	safety
	water

Data Analysis:
	heat maps
	bounce back ratio
	performance metrics
	analyse dashboard:
		Microsoft clarity
		Light house extension
		Google Analytics

Usability test
JMeter>> performance and load test
CDN's


UX Flow/ Journey map/ Direction:
Eg:
	Swiggy
	login
	search food
	add to cart
	checkout
	payment
	tracking>> ordered, preparing, transit, delivered

Task: Create Journey map/ road map of following functionalities
	1. DocOnline, Booking appointment 
	2. IRCTC Tatkal ticket booking
	3. TNEB bill payment via GPay

Minimum Value Product



Psychology:
must have color code
UI with proper flow

Design: based on journey map and psychology of UI:
tools:
Canva
figma:






Wireframes:
low level>>>
high level>>>

Prototype
Iterate


Open figma>> create design by selecting frames like android compact, extends, based on device then design.
Once design done goto "F" and select File>> Save local copy to download ".fig" so that we can import

1. Way2pG
	a. find PG nearby erode
	b. Find PG by name and contact
	c. Pay PG Fee

2. Bank
	a. Fund Transfer
	b. Apply new insurance
	c. Update Customer details

3. DocOnline
	a. book appointment
	b. review consultation
	c. Search Dermatologist near by erode




Phase 2: Interactive Web application 

Server Side JS >> Node JS
Client Side JS >>
	Integrated With HTML :
		inline, internal, external
	Events and actions via Java Script
		games
		Validation
		convertors
		CRUD
		Data processing
		Events:
			onmouseenter=""
			onmouseleave=""
			onclick=""
			ondblclick=""
			....
	

Objective of Programming:
	Offering solutions
		Data 		>> temp(variables/ arrays/ collections)/ perm
			variables:
				var, const, let
				eg: var mobileNumber=98765676534
					let aadhaar = 987656789876
					const pan = ABCDE1221T
			data types:
				Number	>> whole, decimal
				String
				Boolean
				Date
				Object>> array/list, JSON, 
				
		Functionalities
			function funName(){
				// definition
			}

Operators:
	arithmetic
	relational
	logical
	assignment
	ternary>> (condition)?true:false

condition:
	if, else
	switch
loop:
	while
	for
	
Objects:
	document
	window>> onload, 

	Document Object Model (DOM):
		document>> object
		selectors: id, name, tagName, className
		tagName>> element Name>> h2>> 0,1,2,3...
		
		Usage:
		1. Modify Content of element
		2. Modify attributes of element
		3. Add/ Remove element
		4. Validation
		5. CRUD
	
task 1: via prompt and eventListener while click on button
	SIP Calculator	
	BMR Calculator
	Home Loan Calculator


DOM with table add, deletion, reset on traverse over TD

DOM CRUD Operation
	storage>> list/ array, localStorage, sessionStorage
	data logic:
	Array/ list object like map, filter, push, pop, findIndex, splice
	1. basic CRUD 
	2. real time use case
		list of JSON's
			{
				"model":"ACER view",
				"size":14.5
				"SN":"213DRE2"
			}
Task :
	1. Hack-a-thon: CRUD Student management
	2. Beneficiaries: CRUD payees name, accountno,ifscode
	3. Insurance Policies: CRUD schemes


Java Script Exception Handling:
objective:
	provide another chance to the user to continue/ prevent the process 
	
	flow:
		try{
			.. possible statement which cause exception
		}
		catch(error){
			.. provide another chance by exlpaning the error 				in user terms
		}
		finally{
			.. statement executes always exception occurs/ 				not
		}
	ReferenceError
	UncaughtError


DOM Form Validation using regex
Regular Expression: validating data at client side 
	
(/exp/).test(field)
	true/ false

	a-z		>> lowercase alpha
	A-Z		>> upper case alpha
	0-9		>> numbers
	
	+		>> 1/ more occurrence
	*		>> 0/ more occurrence
	$		>> check text at the end
	^		>> check text at the beginning
	{}		>> size>> min, max

Phase 3: React JS
server side presentation logic >> front end
	CRUD
	Components>> JavaScriptXml/eXtension, JS
	Properties
	Routers
	Asynchronous
	state management

nodejs.org>> 
	SDK to enables server side development(front end, backend)

	node --version
	npm --version

	Setting Up React environment:
		npm install -g create-react-app
 
		npx create-react-app APP-NAME


Its library>> base module react(JSX), react-dom(binding/map), react-scripts(execution, testing, building, deploy)

		npx create-react-app APP-NAME
		npx create-react-app explore-ui

explore-ui
	node_modules>> physical location where libraries/modules installed
	package.json
	package-lock.json
	src
	public
	build

	React Component>> JS/ JSX

component				element
	h1					h1
	id(property)			id(attribute)
	input type(property)		input type(attribute)
	className			class
	onClick				onclick
	onDoubleClick			ondblclick
	
	normal function:
		function hai(){

		}

	arrow function:
		const hai = () =>{
			
		}
	Components
		Object Oriented
		Functional >> hooks>> useState, useEffect, useParams, useNavigate,...

	const[var,setVar]=useState(initialization)
			
	





